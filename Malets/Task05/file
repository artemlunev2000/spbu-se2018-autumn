|---------------------------------------------------------------------------------------------|
| method    | 5        | 10       | 100      | 1K      | 10K   | 100K   | 1M   | 10M  | 100M  |
|-----------|----------|----------|----------|---------|-------|--------|------|------|-------|
| bubble    | 0.000004 | 0.000006 | 0.00013  | 0.01    | 0.35  | 37.5   | n/a  | n/a  | n/a   |
| insertion | 0.000004 | 0.000005 | 0.000065 | 0.0024  | 0.07  | 9.1    | n/a  | n/a  | n/a   |
| quick     | 0.000004 | 0.000005 | 0.000035 | 0.00039 | 0.006 | 0.026  | 1.12 | n/a  | n/a   |
| merge     | 0.000009 | 0.000012 | 0.000055 | 0.00053 | 0.007 | 0.024  | 0.34 | 4.99 | 68.8  |
| heap      | 0.000006 | 0.000007 | 0.000045 | 0.00061 | 0.008 | 0.042  | 1.04 | 17.6 | 259.3 |
|---------------------------------------------------------------------------------------------|

Выводы:
!) Квадратичные сортировки вполне квадратичны.
1) При малом количестве элементов различия в скорости несущественны.
2) При большом количестве элементов различия в скорости существенны.
3) Использование рекурсивных алгоритмов не всегда приводит к хорошим последствиям.
4) Использование рекурсивных алгоритмов иногда приводит к плохим последствиям.

По поводу mmap:
1) Для небольших файлов различий между загрузкой и использованием mmap нет.
2) mmap лучше кривого использования seek/read.

0) Использовались случайные строки с длиной до 32 символов.
1) На 10M quick прилег от переполнения стека.
